{"version":3,"sources":["firebase.js","Contexts/AuthContext.js","Components/Signup.js","Components/Trending.js","Components/NowPlaying.js","Components/SearchBar.js","Components/Home.js","Components/BasicNavbar.js","Components/Login.js","Components/Account.js","Components/Cast.js","Components/StarRating.js","Components/MovieDetails.js","Components/SearchResults.js","Components/WatchlistCard.js","Components/Watchlist.js","Components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_MESSAGING_APP_ID","app","firebase","initializeApp","auth","db","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentuser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","logout","signOut","signup","createUserWithEmailAndPassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","color","i","Math","floor","random","e","a","preventDefault","current","collection","add","watchlist","ratings","profileColor","push","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","Control","ref","required","type","placeholder","Button","disabled","to","Trending","props","trendingMovies","setTrendingMovies","randomIndex","fetch","then","response","json","results","getRandomMovieImage","backdrop_path","component","map","movie","imgUrl","poster_path","pathname","id","effect","src","placeholderSrc","alt","original_title","vote_average","release_date","NowPlaying","nowPlaying","setNowPlaying","SearchBar","search","setSearch","styleClass","onChange","target","Home","mainImg","setMainImg","path","setTimeout","bgColor","spinnerColor","textColor","text","backgroundImage","Row","Col","xs","BasicNavbar","Navbar","backgroundColor","Nav","replace","Login","Account","setProfileColor","get","snapshot","forEach","data","toUpperCase","split","onClick","Cast","credits","setCredits","castComponent","cast","person","profile_path","name","character","StarRating","setValue","handleClick","rating","index","length","Object","keys","doc","update","snaphot","defaultStar","document","getElementById","setAttribute","aria-label","htmlFor","icon","faBan","faStar","MovieDetails","location","useLocation","setMovie","setImgUrl","backgroundImg","setBackgroundImg","handleWatchlist","every","handleRuntime","num","hour","minute","fetchdata","genresName","genres","genre","fluid","md","join","runtime","tagline","overview","SearchResults","searchTerm","setSearchTerm","movies","setMovies","fontSize","WatchlistCard","handleRemove","Watchlist","setWatchlist","updatedWatchlist","filter","movieId","App","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.3b0e56ce.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    appId: process.env.REACT_APP_MESSAGING_APP_ID,\r\n}\r\nconst app = firebase.initializeApp(firebaseConfig)\r\nexport const auth = app.auth()\r\nexport const db = app.firestore()\r\n\r\nexport default app\r\n\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { auth } from \"../firebase\"\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentuser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged((user) => {\r\n            setCurrentuser(user)\r\n            setLoading(false)\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        logout,\r\n        signup\r\n    }\r\n    return (\r\n\r\n        <AuthContext.Provider value={value} >\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { Card, Form, Button, Container, Alert } from \"react-bootstrap\"\r\nimport { useAuth, } from \"../Contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { db } from \"../firebase\"\r\n\r\nfunction Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    let letters = \"0123456789ABCDEF\";\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++)\r\n        color += letters[(Math.floor(Math.random() * 15))];\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value)\r\n            return setError(\"Passwords do not match \")\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            db.collection(\"Users\")\r\n                .add({\r\n                    email: emailRef.current.value,\r\n                    watchlist: [],\r\n                    ratings: [],\r\n                    profileColor: color\r\n                })\r\n            setLoading(false)\r\n            history.push(\"/\")\r\n        }\r\n        catch {\r\n            setError(\"Failed to create account\")\r\n        }\r\n    }\r\n    return (\r\n        <Container className=\"d-flex justify-content-center  align-items-center\"\r\n            style={{ minHeight: \"100vh\" }}>\r\n            <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <h2 className=\"text-center mb-4\" >Sign up</h2>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group className=\"mt-2\">\r\n                                <Form.Control ref={emailRef} required type=\"email\" placeholder=\"Enter email\" />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mt-2\">\r\n                                <Form.Control ref={passwordRef} required type=\"password\" placeholder=\"Enter password\" />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mt-2\">\r\n                                <Form.Control ref={passwordConfirmRef} required type=\"password\"\r\n                                    placeholder=\"Enter password again\" />\r\n                            </Form.Group>\r\n                            <Button disabled={loading} variant=\"info\" type=\"submit\">Submit </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n                <div className=\"w-100 text-center mt-2\" >\r\n                    <h2>Already have an account? <Link className=\" text-info\"\r\n                        to=\"/login\">Login</Link></h2>\r\n                </div>\r\n\r\n            </div>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Container } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nfunction Trending(props) {\r\n    const [trendingMovies, setTrendingMovies] = useState()\r\n    const randomIndex = Math.floor(Math.random() * 20)\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.themoviedb.org/3/trending/movie/week?api_key=\" + process.env.REACT_APP_TMDB_API_KEY)\r\n            .then((response) => response.json())\r\n            .then(response => {\r\n                setTrendingMovies(response.results)\r\n\r\n            })\r\n    }, [])\r\n    useEffect(() => {\r\n        if (trendingMovies) {\r\n            props.getRandomMovieImage(trendingMovies[randomIndex].backdrop_path)\r\n        }\r\n\r\n    }, [trendingMovies])\r\n    const component = trendingMovies && trendingMovies.map((movie) => {\r\n        const imgUrl = movie.poster_path\r\n            ? `https://www.themoviedb.org/t/p/w500/${movie.poster_path}`\r\n            : process.env.PUBLIC_URL + \"/placeholder.png\"\r\n\r\n        return (\r\n            <div className=\"mr-2 text-center \" key={movie.id} >\r\n                <Link to={{\r\n                    pathname: `/details-${movie.id}`,\r\n                }}>\r\n                    <LazyLoadImage\r\n                        effect=\"blur\"\r\n                        className=\"homeCard rounded\"\r\n                        src={imgUrl}\r\n                        placeholderSrc={process.env.PUBLIC_URL + \"/placeholder.png\"}\r\n                        alt={movie.original_title}></LazyLoadImage>\r\n\r\n                </Link>\r\n                <h6>{movie.vote_average === 0 ? movie.release_date\r\n                    : movie.vote_average}</h6>\r\n                <Link className=\"nav-link p-0 m-0\" to={{\r\n                    pathname: `/details-${movie.id}`,\r\n                }}>\r\n                    <h6 className=\"text-dark\" >{movie.original_title}</h6>\r\n\r\n                </Link>\r\n\r\n            </div >\r\n\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h1 >Trendings</h1>\r\n            </Container>\r\n\r\n\r\n            <Container className=\"d-flex overflow-auto \" >\r\n\r\n                {component}\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Trending\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Container } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nfunction NowPlaying() {\r\n    const [nowPlaying, setNowPlaying] = useState()\r\n    useEffect(() => {\r\n        fetch(\"https://api.themoviedb.org/3/movie/now_playing?api_key=\" + process.env.REACT_APP_TMDB_API_KEY)\r\n            .then((response) => response.json())\r\n            .then(response => {\r\n                setNowPlaying(response.results)\r\n            })\r\n    }, [])\r\n    const component = nowPlaying && nowPlaying.map((movie) => {\r\n        const imgUrl = movie.poster_path\r\n            ? `https://www.themoviedb.org/t/p/w500/${movie.poster_path}`\r\n            : process.env.PUBLIC_URL + \"/placeholder.png\"\r\n        return (\r\n            <div className=\"mr-2 text-center \" key={movie.id} >\r\n                <Link to={{\r\n                    pathname: `/details-${movie.id}`,\r\n                }}>\r\n                    <LazyLoadImage\r\n                        className=\" homeCard rounded\"\r\n                        effect=\"blur\"\r\n                        placeholderSrc={process.env.PUBLIC_URL + \"/placeholder.png\"}\r\n                        src={imgUrl}\r\n                        alt={movie.original_title}>\r\n                    </LazyLoadImage>\r\n\r\n                </Link>\r\n                <h6>{movie.vote_average === 0 ? movie.release_date\r\n                    : movie.vote_average}</h6>\r\n                <Link className=\"nav-link p-0 m-0\" to={{\r\n                    pathname: `/details-${movie.id}`,\r\n                }}>\r\n                    <h6 className=\"text-dark\" >{movie.original_title}</h6>\r\n\r\n                </Link>\r\n\r\n            </div>\r\n\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h1  >Now In Theaters</h1>\r\n            </Container>\r\n            <Container className=\"d-flex overflow-auto \" >\r\n                {component}\r\n            </Container>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default NowPlaying\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\n\r\n\r\nfunction SearchBar(props) {\r\n    const [search, setSearch] = useState(\"\")\r\n    const history = useHistory()\r\n    function handleChange(e) {\r\n        setSearch(e.target.value)\r\n    }\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        history.push(`/search-${search}`)\r\n    }\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit} className={\"d-flex \" + props.styleClass}>\r\n                <Form.Control required value={search} onChange={handleChange}\r\n                    placeholder={\"Search a Movie\"} ></Form.Control>\r\n                <Button variant=\"info\" className=\"searchButton d-flex \" type=\"submit\"  > Search\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { useState } from 'react'\r\nimport Trending from './Trending'\r\nimport { Col, Container, Row } from \"react-bootstrap\"\r\nimport NowPlaying from './NowPlaying'\r\nimport SearchBar from './SearchBar'\r\nimport LoadingScreen from \"react-loading-screen\"\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nfunction Home() {\r\n    const [mainImg, setMainImg] = useState(\"\")\r\n    const [loading, setLoading] = useState(true)\r\n    function getRandomMovieImage(path) {\r\n        setMainImg(`https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/${path}`)\r\n        setTimeout(() => setLoading(false), 500)\r\n    }\r\n    const component = () => {\r\n        return (\r\n            <div>\r\n                <Container className=\"  pl-0 mb-0    mainImg\"\r\n                    style={{ backgroundImage: `url(${mainImg})` }} >\r\n                    <Row className=\" d-flex align-items-center  h-100 mainText text-light ml-auto  \">\r\n\r\n                        <Col xs={12} className=\"mt-4\" >\r\n                            <h2 className=\"mb-0 homeText\" > Welcome.Millions of movies to discover. Explore now.</h2>\r\n                        </Col>\r\n\r\n                        <Col >\r\n                            <SearchBar styleClass=\"homeForm\"></SearchBar>\r\n                        </Col>\r\n\r\n\r\n                    </Row>\r\n                </Container>\r\n                <NowPlaying></NowPlaying>\r\n                <Trending getRandomMovieImage={getRandomMovieImage} ></Trending>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <LoadingScreen loading={loading}\r\n            bgColor='#f1f1f1'\r\n            spinnerColor='#9ee5f8'\r\n            textColor='#676767'\r\n            text='Loading'\r\n        >\r\n\r\n            <div>{component()}</div>\r\n        </LoadingScreen>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { Navbar, Nav } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useAuth } from \"../Contexts/AuthContext\"\r\nimport React from \"react\"\r\nfunction BasicNavbar(props) {\r\n    const { currentUser } = useAuth()\r\n    return (\r\n        <Navbar className=\"top \" style={{\r\n            backgroundColor: \"#000\"\r\n        }}>\r\n            <Link to=\"/\" className=\"nav-link  text-light\">RMDB</Link>\r\n            <Nav className=\"ml-auto   \">\r\n\r\n                <Link to=\"/\" className=\"nav-link  text-light\">Home</Link>\r\n\r\n                {currentUser ?\r\n                    <div className=\"d-flex\">\r\n                        <Link className=\"nav-link  text-light\" to=\"/account\">Account</Link>\r\n                        <Link to=\"/watchlist\" className=\"nav-link text-light\" > Watchlist</Link>\r\n\r\n                    </div>\r\n\r\n                    : <div className=\"d-flex\" >\r\n                        <Link replace className=\"nav-link  text-light\" to=\"/login\">Login</Link>\r\n                        <Link replace className=\"nav-link  text-light\" to=\"/signup\">Sign Up</Link>\r\n\r\n                    </div>}\r\n            </Nav>\r\n\r\n        </Navbar >\r\n    )\r\n\r\n}\r\nexport default BasicNavbar","import React, { useState, useRef } from 'react'\r\nimport { Card, Form, Button, Container, Alert } from \"react-bootstrap\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useAuth } from \"../Contexts/AuthContext\"\r\nfunction Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState()\r\n    const [loading, setLoading] = useState()\r\n    const history = useHistory()\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            setLoading(false)\r\n            history.push(\"/\")\r\n        }\r\n\r\n        catch {\r\n            setError(\"Failed to login\")\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Container className=\"d-flex justify-content-center  align-items-center\"\r\n                style={{ minHeight: \"100vh\" }}>\r\n                <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h2 className=\"text-center mb-4\" > Login</h2>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group className=\"mt-2\">\r\n                                    <Form.Control ref={emailRef} required type=\"email\" placeholder=\"Enter email\" />\r\n                                </Form.Group>\r\n                                <Form.Group className=\"mt-2\">\r\n                                    <Form.Control ref={passwordRef} required type=\"password\" placeholder=\"Enter password\" />\r\n                                </Form.Group>\r\n                                <Button disabled={loading} variant=\"info\" type=\"submit\">Submit </Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text-center mt-2\" >\r\n                        <h2>Do not have an account? <Link className=\" text-info\"\r\n                            to=\"/signup\">Sign Up</Link></h2>\r\n                    </div>\r\n\r\n                </div>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Container, Alert, Button } from 'react-bootstrap'\r\nimport { useAuth } from \"../Contexts/AuthContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { db } from \"../firebase\"\r\nfunction Account() {\r\n    const [error, setError] = useState()\r\n    const { currentUser, logout } = useAuth()\r\n    const [profileColor, setProfileColor] = useState()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        db.collection(\"Users\").get()\r\n            .then(snapshot => {\r\n                snapshot.forEach(user => {\r\n                    const data = user.data()\r\n                    if (currentUser.email === data.email) {\r\n                        setProfileColor(data.profileColor)\r\n                    }\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    async function handleLogOut() {\r\n        setError(\"\")\r\n        try {\r\n            await logout()\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n    return (\r\n        <Container className=\"d-flex align-items-center justify-content-center \"\r\n            style={{ minHeight: \"100vh\" }} >\r\n            <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <div className=\"d-flex align-items-center \">\r\n                            <h1 className=\" text-light profileImg mt-2 pt-4 text-center\"\r\n                                style={{ backgroundColor: profileColor }} >\r\n                                {currentUser && currentUser.email[0].toUpperCase()}</h1>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <h3 className=\"ml-5  \" >\r\n                                {currentUser && currentUser.email.split(\"@\")[0]}\r\n                            </h3>\r\n                        </div>\r\n\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n                    </Card.Body>\r\n                    <Button onClick={handleLogOut}>\r\n                        Logout\r\n                        </Button>\r\n                </Card>\r\n            </div>\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Account\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nfunction Cast(props) {\r\n    const [credits, setCredits] = useState()\r\n    useEffect(() => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=${process.env.REACT_APP_TMDB_API_KEY}`)\r\n            .then(response => response.json())\r\n            .then(response => setCredits(response))\r\n    }, [props])\r\n    const castComponent = credits && credits.cast.map((person) => {\r\n        const imgUrl = person.profile_path\r\n            ? `https://www.themoviedb.org/t/p/w500/${person.profile_path}`\r\n            : process.env.PUBLIC_URL + \"/placeholder.png\"\r\n        return (\r\n            <Container key={Math.random()}>\r\n                <div className=\"castCard  \" >\r\n                    <LazyLoadImage effect=\"blur\" className=\"castImg h-70\" src={imgUrl}\r\n                        placeholderSrc={process.env.PUBLIC_URL + \"/placeholder.png\"}></LazyLoadImage>\r\n                    <p className=\"mx-1 my-0\" ><strong> {person.name}</strong></p>\r\n                    <p className=\"mx-1 my-0\">{person.character}</p>\r\n\r\n\r\n                </div>\r\n            </Container>\r\n        )\r\n    })\r\n    return (\r\n        <Container className=\"d-flex overflow-auto \">\r\n            {castComponent}\r\n\r\n        </Container>\r\n    )\r\n}\r\nexport default Cast\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faStar, faBan } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { db } from \"../firebase\"\r\nimport { useAuth } from \"../Contexts/AuthContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\nfunction StarRating(props) {\r\n    const [value, setValue] = useState(0)\r\n    const { currentUser } = useAuth()\r\n    const history = useHistory()\r\n    function handleRating(rating) {\r\n        db.collection(\"Users\").get()\r\n            .then(snapshot => {\r\n                snapshot.forEach(user => {\r\n                    const data = user.data()\r\n                    if (currentUser.email === (data.email)) {\r\n                        const ratings = data.ratings\r\n                        let index = null\r\n                        for (let i = 0; i < ratings.length; i++)\r\n                            if (Object.keys(ratings[i])[0] == props.id)\r\n                                index = i\r\n                        if (index || index === 0) {\r\n                            ratings[index] = {\r\n                                [props.id]: rating\r\n                            }\r\n                        }\r\n                        else (\r\n                            ratings.push({\r\n                                [props.id]: rating\r\n                            })\r\n                        )\r\n                        db.collection(\"Users\").doc(user.id).update({\r\n                            ratings: ratings\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            db.collection(\"Users\").get()\r\n                .then(snapshot => {\r\n                    snapshot.forEach(user => {\r\n                        const data = user.data()\r\n                        if (currentUser.email === (data.email)) {\r\n                            db.collection(\"Users\").doc(user.id).get()\r\n                                .then(snaphot => {\r\n                                    let defaultStar = null\r\n                                    snaphot.data().ratings.forEach(rating => {\r\n                                        if (Object.keys(rating)[0] == props.id) {\r\n                                            defaultStar = rating[props.id]\r\n                                            setValue(rating[props.id])\r\n                                        }\r\n                                    })\r\n                                    if (defaultStar) {\r\n                                        const checkedStar = document.getElementById(`rating-${defaultStar}`)\r\n                                        checkedStar.setAttribute(\"checked\", \"checked\")\r\n\r\n                                    }\r\n                                    else {\r\n                                        const ratingNone = document.getElementById(\"rating-none\")\r\n                                        ratingNone.setAttribute(\"checked\", \"checked\")\r\n                                    }\r\n                                })\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        else {\r\n\r\n        }\r\n    }, [])\r\n    function handleClick(e) {\r\n        if (currentUser) {\r\n            setValue(e.target.value)\r\n            handleRating(e.target.value)\r\n        }\r\n        else {\r\n            history.push(\"/login\")\r\n        }\r\n\r\n    }\r\n    return (\r\n\r\n        <div className=\"rating-group\">\r\n            <input onClick={handleClick} className=\" rating__input rating__input--none\" name=\"rating\" id=\"rating-none\"\r\n                value=\"0\" type=\"radio\" />\r\n            <label aria-label=\"No rating\" className=\"rating__label\" htmlFor=\"rating-none\">\r\n                <FontAwesomeIcon icon={faBan} className=\"rating__icon rating__icon--none \"></FontAwesomeIcon >\r\n            </label>\r\n            <label aria-label=\"1 star\" className=\"rating__label\" htmlFor=\"rating-1\">\r\n                <FontAwesomeIcon icon={faStar} className=\"rating__icon rating__icon--star \"></FontAwesomeIcon >\r\n            </label>\r\n            <input onClick={handleClick} className=\"rating__input\" name=\"rating\" id=\"rating-1\" value=\"1\" type=\"radio\" />\r\n\r\n            <label aria-label=\"2 stars\" className=\"rating__label\" htmlFor=\"rating-2\">\r\n                <FontAwesomeIcon icon={faStar} className=\"rating__icon rating__icon--star \"></FontAwesomeIcon >\r\n            </label>\r\n            <input onClick={handleClick} className=\"rating__input\" name=\"rating\" id=\"rating-2\" value=\"2\"\r\n                type=\"radio\" />\r\n            <label aria-label=\"3 stars\" className=\"rating__label\" htmlFor=\"rating-3\">\r\n                <FontAwesomeIcon icon={faStar} className=\"rating__icon rating__icon--star \"></FontAwesomeIcon>\r\n            </label>\r\n            <input onClick={handleClick} className=\"rating__input\" name=\"rating\" id=\"rating-3\" value=\"3\"\r\n                type=\"radio\" />\r\n            <label aria-label=\"4 stars\" className=\"rating__label\" htmlFor=\"rating-4\">\r\n                <FontAwesomeIcon icon={faStar} className=\"rating__icon rating__icon--star \"></FontAwesomeIcon>\r\n            </label>\r\n            <input onClick={handleClick} className=\"rating__input\" name=\"rating\" id=\"rating-4\" value=\"4\" type=\"radio\" />\r\n            <label aria-label=\"5 stars\" className=\"rating__label\" htmlFor=\"rating-5\">\r\n                <FontAwesomeIcon icon={faStar} className=\"rating__icon rating__icon--star \"></FontAwesomeIcon >\r\n            </label>\r\n            <input onClick={handleClick} className=\"rating__input\" name=\"rating\" id=\"rating-5\" value=\"5\" type=\"radio\" />\r\n            <h5 className=\"ml-1\" >{value}/5</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StarRating\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Container, Row, Button } from 'react-bootstrap'\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport Cast from './Cast'\r\nimport { useAuth } from \"../Contexts/AuthContext\"\r\nimport { db } from \"../firebase\"\r\nimport StarRating from \"./StarRating\"\r\nimport LoadingScreen from \"react-loading-screen\"\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\r\nfunction MovieDetails() {\r\n    const location = useLocation()\r\n    const { currentUser } = useAuth()\r\n    const [movie, setMovie] = useState()\r\n    const [imgUrl, setImgUrl] = useState()\r\n    const [backgroundImg, setBackgroundImg] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n    const history = useHistory()\r\n    function handleWatchlist() {\r\n        if (currentUser) {\r\n            db.collection(\"Users\").get()\r\n                .then(snapshot => {\r\n                    snapshot.forEach(user => {\r\n                        const data = user.data()\r\n                        if (currentUser.email === (data.email)) {\r\n                            const watchlist = data.watchlist\r\n                            if (watchlist.every(id => id !== movie.id)) {\r\n                                watchlist.push(movie.id)\r\n                            }\r\n                            db.collection(\"Users\").doc(user.id).update({\r\n                                watchlist: watchlist\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        else {\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        async function fetchdata() {\r\n            await fetch(`https://api.themoviedb.org/3/movie/${location.pathname.split(\"-\")[1]}?api_key=${process.env.REACT_APP_TMDB_API_KEY}`)\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    if (response.poster_path)\r\n                        setImgUrl(\"https://image.tmdb.org/t/p/w500/\" + response.poster_path)\r\n                    else\r\n                        setImgUrl(\"placeholder.png\")\r\n                    if (response.backdrop_path)\r\n                        setBackgroundImg(\"https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/\" + response.backdrop_path)\r\n                    setMovie(response)\r\n                    setLoading(false)\r\n                })\r\n        }\r\n\r\n        fetchdata()\r\n\r\n\r\n    }, [location])\r\n\r\n    function handleRuntime(num) {\r\n        if (num < 60)\r\n            return (`${num}m`)\r\n        const hour = Math.floor(num / 60)\r\n        const minute = num % 60\r\n        return (minute === 0 ? `${hour}h` : `${hour}h ${minute}m`)\r\n    }\r\n\r\n    const component = () => {\r\n        if (movie) {\r\n            const genresName = movie.genres.map(genre => { return genre.name })\r\n            return (\r\n                <div>\r\n                    <Container fluid style={{ backgroundImage: `url(${backgroundImg})` }}\r\n                        className=\"backgroundImg pl-0  detailsCard mb-4  \">\r\n                        <Row className=\"movieInfoCard text-light ml-auto d-flex align-items-center\" >\r\n                            <Col md=\"auto\" xs=\"12\" className=\"my-4 \" >\r\n                                <LazyLoadImage\r\n                                    effect=\"blur\"\r\n                                    placeholderSrc={process.env.PUBLIC_URL + \"/placeholder.png\"}\r\n                                    src={imgUrl}\r\n                                    alt={movie.original_title}\r\n                                    className=\"detailsImg rounded\" >\r\n                                </LazyLoadImage>\r\n                            </Col>\r\n                            <Col >\r\n                                <Row className=\"text-center\" >\r\n                                    <h1>{`${movie.original_title} (${movie.release_date.split(\"-\")[0]})`}\r\n                                    </h1>\r\n                                    <h1 className=\"text-white-50\"></h1>\r\n\r\n                                </Row>\r\n                                <Row className=\"ml-1\">\r\n                                    <h5 >{movie.vote_average} </h5>\r\n                                    <h5 className=\"mx-1\" >|{genresName.join(\",\")} |</h5>\r\n                                    <h5 >{handleRuntime(movie.runtime)}</h5>\r\n\r\n                                </Row>\r\n\r\n                                <StarRating id={movie.id} ></StarRating>\r\n                                <h5 className=\"text-white-50 ml-1\" >{movie.tagline}</h5>\r\n                                <h5>Overview</h5>\r\n                                <p >{movie.overview} </p>\r\n                                <Row className=\"ml-1 mb-2\" >\r\n\r\n                                    <Button onClick={handleWatchlist} >Add to watchlist</Button>\r\n\r\n                                </Row>\r\n                            </Col>\r\n\r\n\r\n                        </Row>\r\n\r\n\r\n                    </Container>\r\n                    <Cast id={movie.id} ></Cast>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <LoadingScreen loading={loading}\r\n            bgColor='#f1f1f1'\r\n            spinnerColor='#9ee5f8'\r\n            textColor='#676767'\r\n            text='Loading'\r\n        >\r\n\r\n            <div>{component()}</div>\r\n        </LoadingScreen>\r\n\r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, Container } from 'react-bootstrap'\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport SearchBar from \"./SearchBar\"\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\r\nimport LoadingScreen from \"react-loading-screen\"\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nfunction SearchResults() {\r\n    const location = useLocation()\r\n    const [searchTerm, setSearchTerm] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        setSearchTerm(location.pathname.split(\"-\")[1])\r\n    }, [location])\r\n    const [movies, setMovies] = useState()\r\n    useEffect(() => {\r\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&query=${searchTerm}`)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setMovies(response.results)\r\n                setLoading(false)\r\n            })\r\n    }, [searchTerm])\r\n    const component = movies && movies.map(movie => {\r\n        return (\r\n            <Card key={movie.id} className=\" overflow-hidden searchCard mt-2  flex-row \r\n            \">\r\n                <Link to={{\r\n                    pathname: `/details-${movie.id}`,\r\n                }} >\r\n                    <LazyLoadImage\r\n                        className=\"searchImg\"\r\n                        src={movie.poster_path\r\n                            ? \"https://image.tmdb.org/t/p/w500/\" + movie.poster_path\r\n                            : process.env.PUBLIC_URL + \"/placeholder.png\"}\r\n                        effect=\"blur\"\r\n                        placeholderSrc={process.env.PUBLIC_URL + \"/placeholder.png\"}\r\n                        alt={movie.original_title + \" Poster\"} />\r\n                </Link>\r\n\r\n                <Card.Body  >\r\n                    <Link className=\"nav-link p-0 m-0\" to={{\r\n                        pathname: `/details-${movie.id}`,\r\n                    }}>\r\n                        <h4 className=\"text-dark\" >{movie.original_title}</h4>\r\n                    </Link>\r\n                    <p style={{ fontSize: \"1.2rem\" }} className=\"text-muted\">\r\n                        {movie.release_date}</p>\r\n\r\n\r\n                </Card.Body>\r\n\r\n\r\n            </Card>\r\n        )\r\n    })\r\n    return (\r\n        <LoadingScreen loading={loading}\r\n            bgColor='#f1f1f1'\r\n            spinnerColor='#9ee5f8'\r\n            textColor='#676767'\r\n            text='Loading'\r\n        >\r\n\r\n            <Container fluid ><SearchBar styleClass=\"resultsForm\" ></SearchBar>\r\n            </Container>\r\n            <Container>\r\n                <h1>{component}</h1>\r\n\r\n            </Container>\r\n        </LoadingScreen>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SearchResults\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button, Container } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\r\n\r\nfunction WatchlistCard(props) {\r\n    const [movie, setMovie] = useState()\r\n    useEffect(() => {\r\n        fetch(`https://api.themoviedb.org/3/movie/${props.id}?api_key=${process.env.REACT_APP_TMDB_API_KEY}`)\r\n            .then(response => response.json())\r\n            .then(response => setMovie(response))\r\n    }, [props.id])\r\n    function handleRuntime(num) {\r\n        if (num < 60)\r\n            return (`${num}m`)\r\n        const hour = Math.floor(num / 60)\r\n        const minute = num % 60\r\n        return (minute === 0 ? `${hour}h` : `${hour}h ${minute}m`)\r\n    }\r\n\r\n    const component = () => {\r\n        const genresName = movie.genres.map(genre => { return genre.name })\r\n        const imgUrl = movie.poster_path\r\n            ? `https://www.themoviedb.org/t/p/w500/${movie.poster_path}`\r\n            : process.env.PUBLIC_URL + \"/placeholder.png\"\r\n        return (\r\n            <Card id=\"watchlistCard\"\r\n                className=\"mt-2 flex-row \">\r\n                <Link className=\"align-self-center\" to={`details-${movie.id}`}>\r\n                    <LazyLoadImage\r\n                        placeholderSrc={process.env.PUBLIC_URL + \"/placeholder.png\"}\r\n                        effect=\"blur\"\r\n                        className=\" watchlistImg \"\r\n                        alt={movie.original_title + \" poster\"}\r\n                        src={imgUrl} ></LazyLoadImage>\r\n                </Link>\r\n                <Card.Body className=\"\" >\r\n                    <Link className=\"nav-link text-dark p-0\" to={`details-${movie.id}`}>\r\n                        <h1>{movie.original_title} </h1>\r\n\r\n                    </Link>\r\n                    <div id=\"watchlistInfo\" className=\"d-flex \" >\r\n                        <h5 >{movie.vote_average}</h5>\r\n                        <h5  >|{genresName.join(\",\")}|</h5>\r\n                        <h5 >{handleRuntime(movie.runtime)}</h5>\r\n\r\n                    </div>\r\n\r\n                    <p className=\"mb-1  watchlistOverview\" >{movie.overview} </p>\r\n\r\n                </Card.Body>\r\n                <div className=\"align-self-end\" >\r\n                    <Button onClick={() => { props.handleRemove(movie.id) }}\r\n                        variant=\"outline-danger\"\r\n                        className=\"  mb-1 mx-2 float-right\"\r\n                    >Remove</Button>\r\n\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n    return (\r\n        <Container>\r\n            { movie ? component() : \"\"}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default WatchlistCard\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useAuth } from '../Contexts/AuthContext'\r\nimport { db } from \"../firebase\"\r\nimport WatchlistCard from \"./WatchlistCard\"\r\nimport LoadingScreen from \"react-loading-screen\"\r\nfunction Watchlist() {\r\n    const { currentUser } = useAuth()\r\n    const [watchlist, setWatchlist] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n    function handleRemove(id) {\r\n        const updatedWatchlist = watchlist.filter(movieId => movieId !== id)\r\n        db.collection(\"Users\").get()\r\n            .then(snapshot => {\r\n                snapshot.forEach(user => {\r\n                    const data = user.data()\r\n                    if (currentUser.email === (data.email)) {\r\n                        db.collection(\"Users\").doc(user.id).update({\r\n                            watchlist: updatedWatchlist\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n        setWatchlist(updatedWatchlist)\r\n\r\n    }\r\n    useEffect(() => {\r\n        db.collection(\"Users\").get()\r\n            .then(snapshot => {\r\n                snapshot.forEach(user => {\r\n                    const data = user.data()\r\n                    if (currentUser.email === (data.email)) {\r\n                        setWatchlist(data.watchlist)\r\n                        setLoading(false)\r\n                    }\r\n                })\r\n            })\r\n    }, [])\r\n    const component = watchlist && watchlist.map(id => {\r\n        return (<WatchlistCard handleRemove={handleRemove}\r\n            key={id} id={id} ></WatchlistCard>)\r\n    })\r\n    return (\r\n        <LoadingScreen loading={loading}\r\n            bgColor='#f1f1f1'\r\n            spinnerColor='#9ee5f8'\r\n            textColor='#676767'\r\n            text='Loading'\r\n        >\r\n\r\n            <div>{component}</div>\r\n        </LoadingScreen>\r\n    )\r\n}\r\n\r\nexport default Watchlist\r\n","import Signup from \"./Signup\";\nimport { AuthProvider } from \"../Contexts/AuthContext\";\nimport Home from \"./Home\"\nimport BasicNavbar from \"./BasicNavbar\"\nimport { Route, Switch } from \"react-router\";\nimport Login from \"./Login\";\nimport Account from \"./Account\";\nimport MovieDetails from \"./MovieDetails\";\nimport SearchResults from \"./SearchResults\"\nimport Watchlist from \"./Watchlist\";\nfunction App() {\n  return (\n    <AuthProvider>\n      <BasicNavbar></BasicNavbar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home></Home>\n\n        </Route>\n        <Route path=\"/signup\">\n          <Signup ></Signup>\n        </Route>\n        <Route path=\"/login\">\n          <Login ></Login>\n        </Route>\n        <Route path=\"/account\">\n          <Account ></Account>\n        </Route>\n        <Route path=\"/details-:id\">\n          <MovieDetails></MovieDetails>\n        </Route>\n        <Route path=\"/search-:movie\">\n          <SearchResults></SearchResults>\n        </Route>\n        <Route path=\"/watchlist\">\n          <Watchlist></Watchlist>\n        </Route>\n      </Switch>\n\n    </AuthProvider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { HashRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}